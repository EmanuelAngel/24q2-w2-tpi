include ChevronLeftIcon.pug
include ChevronRightIcon.pug
include ArrowRightIcon.pug

- const aClassNames = 'block leading-8 text-center rounded bg-primary-200 text-primary-900 size-8 dark:text-primary-200 dark:bg-primary-900/60'
- const aActiveClassNames = 'block leading-8 text-center text-primary-200 rounded bg-primary-600 size-8 dark:bg-primary-200 dark:text-primary-900'
- const prevPage = page - 1
- const nextPage = page + 1

- function buildURL(newPage, queryParams) {
-   const params = new URLSearchParams()
-   for (const [key, value] of Object.entries(queryParams)) {
-     if (value !== null && value !== undefined && value !== '') {
-       params.set(key, value)
-     }
-   }
-   params.set('page', newPage)
-   const queryString = params.toString()
-   return queryString ? `?${queryString}` : ''
- }

mixin Pagination({ total, page, limit, totalPages, queryParams })
  div(class="text-primary-600/80 dark:text-primary-400/80")
    p
      strong(class="font-semibold") #{total} 
      | resultados encontrados
    if totalPages > 1
      p 
        | Viendo 
        strong(class="font-semibold") #{limit} 
        | resultados por página
      p
        | Página 
        strong(class="font-semibold") #{page }
        |  de 
        strong(class="font-semibold") #{totalPages}

  if total === 0
    p(class="text-primary-600/80 dark:text-primary-400/80") No hay resultados para esta búsqueda
  else
    if totalPages > 1
      ol(class="flex justify-start gap-1 text-xs font-medium")
        if page > 1
          li
            a(href=buildURL(prevPage, queryParams) alt="Anterior" class=`pagination-link inline-flex items-center justify-center ${aClassNames}`)
              span(class="sr-only") Anterior
              +ChevronLeftIcon({ width: 16, height: 16 })

        if totalPages > 5
          if page > 3
            li
              a(href=buildURL(1, queryParams) class=`pagination-link ${aClassNames}`)
                | 1
            if page > 4
              li
                span(class=`${aClassNames}`) ...

          - for (let i = Math.max(1, page - 1); i <= Math.min(totalPages, page + 1); i++)
            li
              if i === page
                span(class=`${aActiveClassNames}`)= i
              else
                a(href=buildURL(i, queryParams) class=`pagination-link ${aClassNames}`)= i

          if page < totalPages - 2
            if page < totalPages - 3
              li
                span(class=`${aClassNames}`) ...
            li
              a(href=buildURL(totalPages, queryParams) class=`pagination-link ${aClassNames}`)= totalPages
        else
          - for (let i = 1; i <= totalPages; i++)
            li
              if i === page
                span(class=`${aActiveClassNames}`)= i
              else
                a(href=buildURL(i, queryParams) class=`pagination-link ${aClassNames}`)= i

        if page < totalPages
          li
            a(href=buildURL(nextPage, queryParams) alt="Siguiente" class=`pagination-link inline-flex items-center justify-center ${aClassNames}`)
              span(class="sr-only") Siguiente
              +ChevronRightIcon({ width: 16, height: 16 })

      div(class="inline-flex items-center justify-center gap-2 pagination-component")
        label(for="goToPage" class="text-primary-600/80 dark:text-primary-400/80") Ir a la página
        div(class="inline-flex h-8")
          input(type="number" name="goToPage" min="1" max=`${totalPages}` value=`${page}` class="h-full text-center border border-transparent go-to-page-input rounded-l-md w-fit form-input bg-primary-200/60 focus:ring-0 active:ring-0 focus:border focus:border-primary-500 focus:bg-transparent dark:bg-primary-900/60 placeholder:italic placeholder:text-primary-400 dark:placeholder:text-primary-800")
          
          button(type="button" class="grid w-16 h-full px-2 font-semibold text-white transition-colors duration-300 search-page-btn sm:w-fit rounded-r-md place-content-center bg-primary-700 hover:bg-primary-800 dark:bg-primary-300 dark:text-black dark:hover:bg-primary-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500")
            span(class="sr-only") Ir a la página
            +ArrowRightIcon({ width: 16, height: 16 })
          
          span(class="invisible m-2 text-sm text-red-700 go-to-page-error")
            | Por favor, ingrese un número de página válido entre 1 y #{totalPages}.

  script.
    document.addEventListener('DOMContentLoaded', function() {
      const paginationLinks = document.querySelectorAll('.pagination-link');
      paginationLinks.forEach(link => {
        link.addEventListener('click', function(e) {
          e.preventDefault();
          const spinner = document.createElement('div');
          spinner.className = 'spinner';
          spinner.innerHTML = '&#8987;';
          this.textContent = '';
          this.appendChild(spinner);
          window.location.href = this.href;
        });
      });
    });

    document.addEventListener('DOMContentLoaded', function() {
      document.querySelectorAll('.pagination-component').forEach(function(component) {
        const goToPageInput = component.querySelector('.go-to-page-input');
        const goToPageBtn = component.querySelector('.search-page-btn');
        const goToPageError = component.querySelector('.go-to-page-error');

        const url = new URL(window.location.href);
        const page = url.searchParams.get('page') || 1;

        goToPageInput.value = page;

        goToPageBtn.addEventListener('click', function() {
          const pageNumber = parseInt(goToPageInput.value);
          const totalPages = parseInt(goToPageInput.max);
          if (pageNumber >= 1 && pageNumber <= totalPages) {
            const url = new URL(window.location.href);
            url.searchParams.set('page', pageNumber);

            const spinner = document.createElement('div');
            spinner.className = 'spinner';
            spinner.innerHTML = '&#8987;';
            this.textContent = '';
            this.appendChild(spinner);

            window.location.href = url;
          } else {
            goToPageError.classList.remove('invisible');
            
            setTimeout(() => {
              goToPageError.classList.add('invisible');
            }, 5000);
          }
        });
      });
    });

  style.
    .spinner {
      animation: spin 1s linear infinite;
    }
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }