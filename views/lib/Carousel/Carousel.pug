mixin Carousel({ images })
  .carousel(role="region" aria-label="Carrusel de imÃ¡genes")
    .carousel-container
      each image, index in images
        .carousel-slide(class=index === 0 ? 'active' : '')
          img.carousel-image(src=`${image}` alt="Imagen")
    button.carousel-button.prev(aria-label="Imagen anterior") &#8249;
    button.carousel-button.next(aria-label="Siguiente imagen") &#8250;
    .carousel-indicators
      each image, index in images
        button.carousel-indicator(aria-label=`Ir a la imagen ${index + 1}` class=index === 0 ? 'active' : '')

style.
  .carousel {
    position: relative;
    width: 100%;
    max-width: 800px;
    margin: 0 auto;
    overflow: hidden;
    aspect-ratio: 16 / 9;
  }
  .carousel-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  .carousel-slide {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  .carousel-slide.active {
    opacity: 1;
    z-index: 1;
  }
  .carousel-image {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }
  .carousel-button {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background-color: rgba(201, 123, 70, 0.7);
    color: #fbf7f1;
    border: none;
    font-size: 24px;
    padding: 10px;
    cursor: pointer;
    transition: background-color 0.3s ease;
    z-index: 2;
  }
  .carousel-button:hover {
    background-color: rgba(201, 123, 70, 1);
  }
  .carousel-button:focus {
    outline: 2px solid #c97b46;
  }
  .carousel-button.prev {
    left: 10px;
  }
  .carousel-button.next {
    right: 10px;
  }
  .carousel-indicators {
    position: absolute;
    bottom: 10px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 10px;
    z-index: 2;
  }
  .carousel-indicator {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: rgba(201, 123, 70, 0.5);
    border: none;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }
  .carousel-indicator.active,
  .carousel-indicator:hover {
    background-color: #c97b46;
  }
  @media (max-width: 768px) {
    .carousel-button {
      font-size: 20px;
      padding: 8px;
    }
    .carousel-indicator {
      width: 10px;
      height: 10px;
    }
  }

script.
  document.addEventListener('DOMContentLoaded', () => {
    const carousel = document.querySelector('.carousel');
    const slides = carousel.querySelectorAll('.carousel-slide');
    const indicators = carousel.querySelectorAll('.carousel-indicator');
    const prevButton = carousel.querySelector('.prev');
    const nextButton = carousel.querySelector('.next');
    let currentIndex = 0;

    function showSlide(index) {
      slides.forEach((slide, i) => {
        slide.classList.toggle('active', i === index);
      });
      indicators.forEach((indicator, i) => {
        indicator.classList.toggle('active', i === index);
      });
    }

    function nextSlide() {
      currentIndex = (currentIndex + 1) % slides.length;
      showSlide(currentIndex);
    }

    function prevSlide() {
      currentIndex = (currentIndex - 1 + slides.length) % slides.length;
      showSlide(currentIndex);
    }

    nextButton.addEventListener('click', nextSlide);
    prevButton.addEventListener('click', prevSlide);

    indicators.forEach((indicator, index) => {
      indicator.addEventListener('click', () => {
        currentIndex = index;
        showSlide(currentIndex);
      });
    });

    carousel.addEventListener('keydown', (e) => {
      if (e.key === 'ArrowLeft') prevSlide();
      if (e.key === 'ArrowRight') nextSlide();
    });

    let touchStartX = 0;
    let touchEndX = 0;

    carousel.addEventListener('touchstart', (e) => {
      touchStartX = e.changedTouches[0].screenX;
    });

    carousel.addEventListener('touchend', (e) => {
      touchEndX = e.changedTouches[0].screenX;
      if (touchStartX - touchEndX > 50) nextSlide();
      if (touchEndX - touchStartX > 50) prevSlide();
    });
  });